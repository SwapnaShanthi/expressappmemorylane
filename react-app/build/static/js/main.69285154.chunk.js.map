{"version":3,"sources":["component/todolist/TaskReceive.js","component/todolist/TaskList.js","component/todolist/TaskSelector.js","component/todolist/TaskApp.js","component/counter/CounterApp.js","component/HomeApp.js","App.js","serviceWorker.js","index.js"],"names":["TaskReceive","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onFocus","e","console","log","target","value","setState","defaultvalue","clearError","listItem","onBlur","handleChange","defineProperty","name","handleSubmit","event","preventDefault","addTask","state","react_default","a","createElement","onSubmit","className","defaultValue","onChange","Component","TaskList","displayList","todoList","map","item","index","visibility","key","buttonColor","onClick","checkItems","itemDisplayName","TaskSelector","completedItemCount","selectItems","TaskApp","inserListItem","itemList","Axios","post","then","res","retrieveAll","catch","error","updateListItem","put","newTask","i","length","todoListItems","status","getcompletedItemCount","count","itemStatus","get","data","payload","componentDidMount","todolist_TaskReceive","todolist_TaskList","todolist_TaskSelector","CounterApp","addCounter","counters","concat","toConsumableArray","increment","idx","decrement","_this2","Counter","counter","class","HomeApp","react_router_dom","to","react_router","path","component","App","component_HomeApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69285154.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport todostyle from './style/todo.css'\n\nclass TaskReceive extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={listItem:\"\",\n                defaultvalue:\"What needs to be done?\"\n                }\n  }\n  onFocus=(e) => {\n    console.log(e.target.value);\n    if (e.target.value !== \"\") {\n        e.target.value=\"\";\n        this.setState({defaultvalue:\"\"})\n    }else{\n        console.log(e.target.value);\n        this.setState({defaultvalue: \"What needs to be done?\"})\n    }\n    this.props.clearError();\n    this.setState({listItem:\"\"});\n  }\n  onBlur=(e) => {\n    console.log(e.target.value);\n    if (e.target.value !== \"\") {\n        e.target.value=\"\";\n        this.setState({defaultvalue:\"\"})\n    }else{\n        console.log(e.target.value);\n        this.setState({defaultvalue: \"What needs to be done?\"})\n    }\n    this.props.clearError();\n    this.setState({listItem:\"\"});\n  }\n  handleChange=(e)=>{\n    this.setState({defaultvalue:\"\"});\n    this.setState({listItem:\"\"});\n    this.setState({[e.target.name]:e.target.value});\n    this.props.clearError();\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addTask({listItem:this.state.listItem});\n    this.setState({defaultvalue:\"\"});\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n          <div className=\"taskreceivediv\"><input className=\"inputstyle\" defaultValue={this.state.defaultvalue} onChange={this.handleChange}  onBlur={this.onBlur} onFocus={this.onFocus} name=\"listItem\" value={this.state.listItem}></input></div>\n         \n      </form>   \n    );\n  }\n}\n\nexport default TaskReceive;","import React, { Component } from 'react';\n\nimport todostyle from './style/todo.css'\n\n\nclass TaskList extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  \n\n  render() {\n    const displayList = this.props.todoList.map((item,index)=>{\n      if(item.visibility){\n        return(<li key={index}><div className={item.buttonColor} onClick={()=>{this.props.checkItems(index)}}></div><div className=\"listdiv\">{item.itemDisplayName}</div></li>)\n      }\n      return null;\n    });\n    return (\n     <div className=\"tasklistdiv\">\n        \n      \n              <ul>\n              {displayList}\n\n              </ul>\n        \n     </div>\n    );\n  }\n}\n\nexport default TaskList;","import React, { Component } from 'react';\n\nimport todo from './style/todo.css'\n\n\nclass TaskSelector extends Component {\n\n  constructor(props){\n    super(props);\n  }\n  \n\n  \n  render() {\n\n    const getcompletedItemCount=()=>{\n\n      if(this.props.completedItemCount>1){\n        return <div className=\"innerselectordiv\">{this.props.completedItemCount} -  items left</div>\n      }else{\n        return <div className=\"innerselectordiv\">{this.props.completedItemCount} -  item left</div>\n      }\n\n    }\n    return (\n     <div className=\"taskselectordiv\">\n           \n            {getcompletedItemCount()}\n            <div className=\"innerselectordiv\"><button className=\"buttonselector\" onClick={()=> this.props.selectItems(\"All\")}>All</button></div>\n            <div className=\"innerselectordiv\"><button className=\"buttonselector\" onClick={()=> this.props.selectItems(\"Active\")}>Active</button></div>\n            <div className=\"innerselectordiv\"><button className=\"buttonselector\" onClick={()=> this.props.selectItems(\"Completed\")}>Completed</button></div>\n         \n\n     </div>\n    );\n  }\n}\n\nexport default TaskSelector;","import React, { Component } from 'react';\nimport TaskReceive from './TaskReceive.js'\nimport TaskList from './TaskList.js'\nimport TaskSelector from './TaskSelector.js'\nimport Axios from 'axios'\n\nimport todostyle from './style/todo.css'\n\n\n\nclass TaskApp extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.todoListItems = [];\n\n    this.state = {\n      todoList: this.todoListItems,\n      itemList: \"\",\n      error:\"\"\n    }\n\n\n  }\n  inserListItem = (itemList) => {\n    Axios.post(`http://localhost:5000/addtolist`, {\n      itemDisplayName: itemList\n    })\n    .then(res => {\n      console.log(res);\n      this.retrieveAll();\n    })\n    .catch(error => {\n      this.setState({ error: \"Server Down\" });\n    });\n\n  }\n  updateListItem = (itemList) => {\n    Axios.put(`http://localhost:5000/updatelist`, {\n      itemDisplayName: itemList\n    })\n    .then(res => {\n      console.log(res);\n      this.retrieveAll();\n    })\n    .catch(error => {\n      this.setState({ error: \"Server Down\" });\n    });\n\n  }\n clearError=()=>{\n  this.setState({error:\"\"});\n }\n\n  addTask = (newTask) => {\n    console.log(\"addTask()\");\n    let error=false;\n    for(let i=0;i<this.state.todoList.length;i++){\n      if(newTask.listItem === this.state.todoList[i].itemDisplayName){\n        this.setState({error:\"This task is already added\"});\n        error=true;\n      }\n    }\n    if(!error){\n      this.setState({ itemList: newTask.listItem }, () => {\n        this.inserListItem(this.state.itemList)\n      });\n      this.setState({error:\"\"});\n    }\n\n  }\n  checkItems = (index) => {\n    this.todoListItems=this.state.todoList;\n    this.todoListItems[index].status = 1;\n    this.todoListItems[index].buttonColor = \"afterclick\";\n    this.setState({todoList:this.todoListItems});\n    this.updateListItem(this.state.todoList);\n\n  }\n\n  getcompletedItemCount = () => {\n\n    let count = 0;\n    for (let i = 0; i < this.state.todoList.length; i++) {\n      if (this.state.todoList[i].status === 0) {\n        count = count + 1;\n      }\n    }\n\n    return count;\n  }\n\n  selectItems = (itemStatus) => {\n\n    for (let i = 0; i < this.state.todoList.length; i++) {\n\n      if (itemStatus === \"All\") {\n\n        this.todoListItems[i].visibility = true;\n\n      } else if (itemStatus === \"Active\") {\n\n        if (this.state.todoList[i].status === 0) {\n          this.todoListItems[i].visibility = true;\n        } else {\n          this.todoListItems[i].visibility = false;\n        }\n\n      } else if (itemStatus === \"Completed\") {\n\n        if (this.state.todoList[i].status === 1) {\n          this.todoListItems[i].visibility = true;\n        } else {\n          this.todoListItems[i].visibility = false;\n        }\n      }\n    }\n    this.setState({ todoList:  this.todoListItems });\n    this.updateListItem(this.state.todoList);\n  }\n\n  retrieveAll = () => {\n    console.log(\"retrieveAll()\");\n    Axios.get(`http://localhost:5000/list`)\n      .then(res => {\n        console.log(res.data.payload);\n        \n        this.setState({ todoList: res.data.payload});\n        this.todoListItems=this.state.todoList;\n       \n\n      })\n      .catch(error => {\n        this.setState({ error: \"Server Down\" });\n      });\n  }\n\n  componentDidMount = () => {\n    this.retrieveAll()\n\n  }\n\n  render() {\n    return (\n      <div className=\"outerdiv\">\n        <div className=\"error\"><label>{this.state.error}</label></div>\n        <TaskReceive todoList={this.state.todoList} addTask={this.addTask} error={this.state.error} clearError={this.clearError}/>\n        <TaskList todoList={this.state.todoList} checkItems={this.checkItems} />\n        <TaskSelector todoList={this.state.todoList} selectItems={this.selectItems} completedItemCount={this.getcompletedItemCount()} />\n      </div>\n    );\n  }\n}\n\nexport default TaskApp;\n","import React, { Component } from 'react';\nimport './style/counter.css'\n\nclass CounterApp extends Component {constructor(props){\n    super(props);\n    this.state = {counters: [ {count:0} ]}\n    }\n    addCounter = () => {\n                this.setState({ counters: [...this.state.counters, {count:0}] })\n    }\n    increment =  (idx)=>{\n        this.state.counters[idx].count++;\n        this.setState({counters: this.state.counters})\n\n    }\n    decrement =  (idx)=>{\n        this.state.counters[idx].count--;\n        this.setState({counters: this.state.counters})\n\n    }\n    render(){\n        const Counter = this.state.counters.map( (counter, idx) => {\n            console.log(+this.state.counters[idx].count);\n            return(\n            \n                <div class=\"center\">\n                    \n                    <h1 class=\"h1\">{this.state.counters[idx].count}</h1>\n                \n                    <button class=\"button\"\n                        onClick={ () => {this.increment(idx)}} >\n                        Increment\n                    </button>\n                    \n                    <button class=\"button\"\n                        onClick={ () => {this.decrement(idx)} } >\n                        Decrement\n                    </button>\n                </div>\n            )});\n        \n    return  (\n            <div>\n                <button class=\"addbutton\" onClick={ ()=>{this.addCounter()} }>\n                    \n                    Add Counter\n                </button>\n                {Counter}\n        \n                \n        </div> \n        )\n    }\n}\n\nexport default CounterApp;","import React, { Component } from 'react';\nimport \"react-router\";\nimport {\n  BrowserRouter,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport TaskApp from './todolist/TaskApp.js'\nimport CounterApp from './counter/CounterApp.js'\nimport '../style/memorylane.css'\n\nclass HomeApp extends Component {\n  render() {\n    return (\n      <div> \n       <BrowserRouter>\n       <div className=\"homeouterdiv\">\n          <span className=\"spanstyle\" ><Link to=\"/\">Home</Link></span>\n          <span className=\"spanstyle\" ><Link to=\"/todolist\">TodoList</Link></span>\n          <span className=\"spanstyle\"><Link to=\"/counterapp\">CounterApp</Link></span>\n        </div>\n        <div className=\"routerdiv\">\n            <Route path=\"/todolist\" component={TaskApp}/>\n            <Route path=\"/counterapp\" component={CounterApp}/>\n         </div>\n         \n       </BrowserRouter>\n    \n    \n      </div>\n    );\n  }\n}\n\nexport default HomeApp;","import React, { Component } from 'react';\nimport './App.css';\nimport HomeApp from './component/HomeApp.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\"> \n        <HomeApp/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}