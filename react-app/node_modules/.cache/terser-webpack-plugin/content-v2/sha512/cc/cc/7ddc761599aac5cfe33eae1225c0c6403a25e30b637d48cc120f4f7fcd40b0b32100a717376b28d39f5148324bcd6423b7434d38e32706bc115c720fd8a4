{"map":"{\"version\":3,\"sources\":[\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/component/todolist/TaskReceive.js\",\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/component/todolist/TaskList.js\",\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/component/todolist/TaskSelector.js\",\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/component/todolist/TaskApp.js\",\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/App.js\",\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/serviceWorker.js\",\"/Users/SHA8350/BootCamp/ReactProject/express-app-memorylane/react-app/src/index.js\"],\"names\":[\"TaskReceive\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onFocus\",\"e\",\"console\",\"log\",\"target\",\"value\",\"setState\",\"defaultvalue\",\"clearError\",\"listItem\",\"onBlur\",\"handleChange\",\"defineProperty\",\"name\",\"handleSubmit\",\"event\",\"preventDefault\",\"addTask\",\"state\",\"react_default\",\"a\",\"createElement\",\"onSubmit\",\"className\",\"defaultValue\",\"onChange\",\"Component\",\"TaskList\",\"displayList\",\"todoList\",\"map\",\"item\",\"index\",\"visibility\",\"key\",\"buttonColor\",\"onClick\",\"checkItems\",\"itemDisplayName\",\"TaskSelector\",\"completedItemCount\",\"selectItems\",\"App\",\"react_router_dom\",\"to\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport todostyle from './style/todo.css'\\n\\nclass TaskReceive extends Component {\\n\\n  constructor(props){\\n    super(props);\\n    this.state={listItem:\\\"\\\",\\n                defaultvalue:\\\"What needs to be done?\\\"\\n                }\\n  }\\n  onFocus=(e) => {\\n    console.log(e.target.value);\\n    if (e.target.value !== \\\"\\\") {\\n        e.target.value=\\\"\\\";\\n        this.setState({defaultvalue:\\\"\\\"})\\n    }else{\\n        console.log(e.target.value);\\n        this.setState({defaultvalue: \\\"What needs to be done?\\\"})\\n    }\\n    this.props.clearError();\\n    this.setState({listItem:\\\"\\\"});\\n  }\\n  onBlur=(e) => {\\n    console.log(e.target.value);\\n    if (e.target.value !== \\\"\\\") {\\n        e.target.value=\\\"\\\";\\n        this.setState({defaultvalue:\\\"\\\"})\\n    }else{\\n        console.log(e.target.value);\\n        this.setState({defaultvalue: \\\"What needs to be done?\\\"})\\n    }\\n    this.props.clearError();\\n    this.setState({listItem:\\\"\\\"});\\n  }\\n  handleChange=(e)=>{\\n    this.setState({defaultvalue:\\\"\\\"});\\n    this.setState({listItem:\\\"\\\"});\\n    this.setState({[e.target.name]:e.target.value});\\n    this.props.clearError();\\n  }\\n  handleSubmit = (event) => {\\n    event.preventDefault();\\n    this.props.addTask({listItem:this.state.listItem});\\n    this.setState({defaultvalue:\\\"\\\"});\\n  }\\n\\n  render() {\\n    return (\\n      <form onSubmit={this.handleSubmit}>\\n          <div className=\\\"taskreceivediv\\\"><input className=\\\"inputstyle\\\" defaultValue={this.state.defaultvalue} onChange={this.handleChange}  onBlur={this.onBlur} onFocus={this.onFocus} name=\\\"listItem\\\" value={this.state.listItem}></input></div>\\n         \\n      </form>   \\n    );\\n  }\\n}\\n\\nexport default TaskReceive;\",\"import React, { Component } from 'react';\\n\\nimport todostyle from './style/todo.css'\\n\\n\\nclass TaskList extends Component {\\n\\n  constructor(props){\\n    super(props);\\n  }\\n\\n  \\n\\n  render() {\\n    const displayList = this.props.todoList.map((item,index)=>{\\n      if(item.visibility){\\n        return(<li key={index}><div className={item.buttonColor} onClick={()=>{this.props.checkItems(index)}}></div><div className=\\\"listdiv\\\">{item.itemDisplayName}</div></li>)\\n      }\\n      return null;\\n    });\\n    return (\\n     <div className=\\\"tasklistdiv\\\">\\n        \\n      \\n              <ul>\\n              {displayList}\\n\\n              </ul>\\n        \\n     </div>\\n    );\\n  }\\n}\\n\\nexport default TaskList;\",\"import React, { Component } from 'react';\\n\\nimport todo from './style/todo.css'\\n\\n\\nclass TaskSelector extends Component {\\n\\n  constructor(props){\\n    super(props);\\n  }\\n  \\n\\n  \\n  render() {\\n\\n    const getcompletedItemCount=()=>{\\n\\n      if(this.props.completedItemCount>1){\\n        return <div className=\\\"innerselectordiv\\\">{this.props.completedItemCount} -  items left</div>\\n      }else{\\n        return <div className=\\\"innerselectordiv\\\">{this.props.completedItemCount} -  item left</div>\\n      }\\n\\n    }\\n    return (\\n     <div className=\\\"taskselectordiv\\\">\\n           \\n            {getcompletedItemCount()}\\n            <div className=\\\"innerselectordiv\\\"><button className=\\\"buttonselector\\\" onClick={()=> this.props.selectItems(\\\"All\\\")}>All</button></div>\\n            <div className=\\\"innerselectordiv\\\"><button className=\\\"buttonselector\\\" onClick={()=> this.props.selectItems(\\\"Active\\\")}>Active</button></div>\\n            <div className=\\\"innerselectordiv\\\"><button className=\\\"buttonselector\\\" onClick={()=> this.props.selectItems(\\\"Completed\\\")}>Completed</button></div>\\n         \\n\\n     </div>\\n    );\\n  }\\n}\\n\\nexport default TaskSelector;\",\"import React, { Component } from 'react';\\nimport TaskReceive from './TaskReceive.js'\\nimport TaskList from './TaskList.js'\\nimport TaskSelector from './TaskSelector.js'\\nimport Axios from 'axios'\\n\\nimport todostyle from './style/todo.css'\\n\\n\\n\\nclass TaskApp extends Component {\\n\\n  constructor(props) {\\n\\n    super(props);\\n    this.todoListItems = [];\\n\\n    this.state = {\\n      todoList: this.todoListItems,\\n      itemList: \\\"\\\",\\n      error:\\\"\\\"\\n    }\\n\\n\\n  }\\n  inserListItem = (itemList) => {\\n    Axios.post(`http://localhost:5000/addtolist`, {\\n      itemDisplayName: itemList\\n    })\\n    .then(res => {\\n      console.log(res);\\n      this.retrieveAll();\\n    })\\n    .catch(error => {\\n      this.setState({ error: \\\"Server Down\\\" });\\n    });\\n\\n  }\\n  updateListItem = (itemList) => {\\n    Axios.put(`http://localhost:5000/updatelist`, {\\n      itemDisplayName: itemList\\n    })\\n    .then(res => {\\n      console.log(res);\\n      this.retrieveAll();\\n    })\\n    .catch(error => {\\n      this.setState({ error: \\\"Server Down\\\" });\\n    });\\n\\n  }\\n clearError=()=>{\\n  this.setState({error:\\\"\\\"});\\n }\\n\\n  addTask = (newTask) => {\\n    console.log(\\\"addTask()\\\");\\n    let error=false;\\n    for(let i=0;i<this.state.todoList.length;i++){\\n      if(newTask.listItem === this.state.todoList[i].itemDisplayName){\\n        this.setState({error:\\\"This task is already added\\\"});\\n        error=true;\\n      }\\n    }\\n    if(!error){\\n      this.setState({ itemList: newTask.listItem }, () => {\\n        this.inserListItem(this.state.itemList)\\n      });\\n      this.setState({error:\\\"\\\"});\\n    }\\n\\n  }\\n  checkItems = (index) => {\\n    this.todoListItems=this.state.todoList;\\n    this.todoListItems[index].status = 1;\\n    this.todoListItems[index].buttonColor = \\\"afterclick\\\";\\n    this.setState({todoList:this.todoListItems});\\n    this.updateListItem(this.state.todoList);\\n\\n  }\\n\\n  getcompletedItemCount = () => {\\n\\n    let count = 0;\\n    for (let i = 0; i < this.state.todoList.length; i++) {\\n      if (this.state.todoList[i].status === 0) {\\n        count = count + 1;\\n      }\\n    }\\n\\n    return count;\\n  }\\n\\n  selectItems = (itemStatus) => {\\n\\n    for (let i = 0; i < this.state.todoList.length; i++) {\\n\\n      if (itemStatus === \\\"All\\\") {\\n\\n        this.todoListItems[i].visibility = true;\\n\\n      } else if (itemStatus === \\\"Active\\\") {\\n\\n        if (this.state.todoList[i].status === 0) {\\n          this.todoListItems[i].visibility = true;\\n        } else {\\n          this.todoListItems[i].visibility = false;\\n        }\\n\\n      } else if (itemStatus === \\\"Completed\\\") {\\n\\n        if (this.state.todoList[i].status === 1) {\\n          this.todoListItems[i].visibility = true;\\n        } else {\\n          this.todoListItems[i].visibility = false;\\n        }\\n      }\\n    }\\n    this.setState({ todoList:  this.todoListItems });\\n    this.updateListItem(this.state.todoList);\\n  }\\n\\n  retrieveAll = () => {\\n    console.log(\\\"retrieveAll()\\\");\\n    Axios.get(`http://localhost:5000/list`)\\n      .then(res => {\\n        console.log(res.data.payload);\\n        \\n        this.setState({ todoList: res.data.payload});\\n        this.todoListItems=this.state.todoList;\\n       \\n\\n      })\\n      .catch(error => {\\n        this.setState({ error: \\\"Server Down\\\" });\\n      });\\n  }\\n\\n  componentDidMount = () => {\\n    this.retrieveAll()\\n\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"outerdiv\\\">\\n        <div className=\\\"error\\\"><label>{this.state.error}</label></div>\\n        <TaskReceive todoList={this.state.todoList} addTask={this.addTask} error={this.state.error} clearError={this.clearError}/>\\n        <TaskList todoList={this.state.todoList} checkItems={this.checkItems} />\\n        <TaskSelector todoList={this.state.todoList} selectItems={this.selectItems} completedItemCount={this.getcompletedItemCount()} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default TaskApp;\\n\",\"import React, { Component } from 'react';\\nimport \\\"react-router\\\";\\nimport TaskApp from './component/todolist/TaskApp.js'\\nimport { Switch,BrowserRouter,Route, Link } from \\\"react-router-dom\\\";\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n       <Link to=\\\"/todolist\\\">TodoList</Link>\\n       <Link to=\\\"/counterapp\\\">CounterApp</Link>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,a){},32:function(e,t,a){e.exports=a(66)},37:function(e,t,a){},57:function(e,t,a){},66:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),o=a(28),r=a.n(o),s=(a(37),a(6)),c=a(7),i=a(9),u=a(8),m=a(10),d=a(29),v=(a(13),function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(i.a)(this,Object(u.a)(t).call(this,e))).onFocus=function(e){console.log(e.target.value),\"\"!==e.target.value?(e.target.value=\"\",a.setState({defaultvalue:\"\"})):(console.log(e.target.value),a.setState({defaultvalue:\"What needs to be done?\"})),a.props.clearError(),a.setState({listItem:\"\"})},a.onBlur=function(e){console.log(e.target.value),\"\"!==e.target.value?(e.target.value=\"\",a.setState({defaultvalue:\"\"})):(console.log(e.target.value),a.setState({defaultvalue:\"What needs to be done?\"})),a.props.clearError(),a.setState({listItem:\"\"})},a.handleChange=function(e){a.setState({defaultvalue:\"\"}),a.setState({listItem:\"\"}),a.setState(Object(d.a)({},e.target.name,e.target.value)),a.props.clearError()},a.handleSubmit=function(e){e.preventDefault(),a.props.addTask({listItem:a.state.listItem}),a.setState({defaultvalue:\"\"})},a.state={listItem:\"\",defaultvalue:\"What needs to be done?\"},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"form\",{onSubmit:this.handleSubmit},l.a.createElement(\"div\",{className:\"taskreceivediv\"},l.a.createElement(\"input\",{className:\"inputstyle\",defaultValue:this.state.defaultvalue,onChange:this.handleChange,onBlur:this.onBlur,onFocus:this.onFocus,name:\"listItem\",value:this.state.listItem})))}}]),t}(n.Component)),p=function(e){function t(e){return Object(s.a)(this,t),Object(i.a)(this,Object(u.a)(t).call(this,e))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this,t=this.props.todoList.map(function(t,a){return t.visibility?l.a.createElement(\"li\",{key:a},l.a.createElement(\"div\",{className:t.buttonColor,onClick:function(){e.props.checkItems(a)}}),l.a.createElement(\"div\",{className:\"listdiv\"},t.itemDisplayName)):null});return l.a.createElement(\"div\",{className:\"tasklistdiv\"},l.a.createElement(\"ul\",null,t))}}]),t}(n.Component),f=function(e){function t(e){return Object(s.a)(this,t),Object(i.a)(this,Object(u.a)(t).call(this,e))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"taskselectordiv\"},e.props.completedItemCount>1?l.a.createElement(\"div\",{className:\"innerselectordiv\"},e.props.completedItemCount,\" -  items left\"):l.a.createElement(\"div\",{className:\"innerselectordiv\"},e.props.completedItemCount,\" -  item left\"),l.a.createElement(\"div\",{className:\"innerselectordiv\"},l.a.createElement(\"button\",{className:\"buttonselector\",onClick:function(){return e.props.selectItems(\"All\")}},\"All\")),l.a.createElement(\"div\",{className:\"innerselectordiv\"},l.a.createElement(\"button\",{className:\"buttonselector\",onClick:function(){return e.props.selectItems(\"Active\")}},\"Active\")),l.a.createElement(\"div\",{className:\"innerselectordiv\"},l.a.createElement(\"button\",{className:\"buttonselector\",onClick:function(){return e.props.selectItems(\"Completed\")}},\"Completed\")))}}]),t}(n.Component),h=a(14),b=a.n(h),E=(n.Component,a(17)),g=(a(57),function(e){function t(){return Object(s.a)(this,t),Object(i.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(E.a,{to:\"/todolist\"},\"TodoList\"),l.a.createElement(E.a,{to:\"/counterapp\"},\"CounterApp\"))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(l.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[32,1,2]]]);","extractedComments":[]}